@each $breakpoint in map-keys($grid-breakpoints) {
  @include media-breakpoint-up($breakpoint) {
    $infix: breakpoint-infix($breakpoint, $grid-breakpoints);

    /// Bordes.  Bootstrap no define bordes _responsive_
    ///
    /// @link node_modules/bootstrap/scss/utilities/_borders.scss
    /// @example html
    ///   <div class="border border-md-top-0 border-width-3"></div>
    .border#{$infix}   { border: $border-width solid $border-color !important; }
    .border#{$infix}-0 { border: 0 !important; }

    @each $direction in $directions {
      .border#{$infix}-#{$direction}   { border-#{$direction}: $border-width solid $border-color !important; }
      .border#{$infix}-#{$direction}-0 { border-#{$direction}: 0 !important; }
    }

    @each $border-width, $length in $border-widths {
      .border-width#{$infix}-#{$border-width}   { border-width: $length !important; }
    }

    @each $color, $rgb in $colors {
      .background#{$infix}-#{$color} {
        background-color: var(--#{$color});

        &:focus {
          background-color: var(--#{$color});
        }
      }

      .#{$color}#{$infix} {
        color: var(--#{$color});

        &:focus {
          color: var(--#{$color});
        }
      }

      /// Bordes de color
      ///
      /// @example html
      ///   <div class="border-red"></div>
      .border#{$infix}-#{$color} {
        border-color: var(--#{$color}) !important;
      }

      .border-hover#{$infix}-#{$color} {
        &:hover,
        &:focus-within {
          border-color: var(--#{$color}) !important;
        }
      }

      @each $opacity, $degree in $opacities {
        /// Color de fondo con transparencia (opacidad)
        ///
        /// @example html
        ///   <div class="background-red-t2"></div>
        .background#{$infix}-#{$color}-t#{$opacity} {
          background-color: scale-color($rgb, $alpha: $degree);
        }

        .o#{$infix}-#{$opacity} {
          opacity: ($degree + 100%) / 100% !important;
        }
      }
    }

    .object-fit-cover#{$infix} {
      object-fit: cover;
    }

    .lead#{$infix} {
      font-size: $lead-font-size;
    }

    /// Poder aumentar o disminuir el alto de la tipograf√≠a.
    /// Se pueden definir con la variable font_size en theme.yml
    /// @example html
    ///   <div class="f-20"></div>
    @each $font-size, $value in $font-sizes {
      .f#{$infix}-#{$font-size} {
        font-size: $font-size-base * $value !important;
      }
    }
  }
}

.font-sm {
  font-size: 1rem * 1.0625;
}

.work-sans {
  font-family: 'Work Sans';
}

